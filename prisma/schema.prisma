// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid()) @map("_id")
  email            String     @unique
  username         String
  hashedPassword   String
  phonenumber      String
  profileAvatarUrl String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  sessions         Session[]
  articles         Articles[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid()) @map("_id")
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Articles {
  id          String   @id @default(uuid()) @map("_id")
  authorId    String?
  title       String
  description String
  category    String
  coverImgUrl String?
  content     String
  readTime    String
  keywords    String[]
  slug        String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User?    @relation(fields: [authorId], references: [id])

  @@index([createdAt])
  @@map("articles")
}

model subscribers {
  id        String   @id @default(uuid()) @map("_id")
  email     String   @unique
  status    Int      @default(0)
  createdAt DateTime @default(now())

  @@map("subscribers")
}

model verificationTokens {
  id    String @id @default(uuid()) @map("_id")
  email String @unique
  token String @unique
}
